use ProtossGateway as knowledge.
use ProtossGateway as actionspec.

module ProtossGateway {
	
	% Keep making zealots if there are sufficient supplies
	if a-goal(unitAmount("Protoss Zealot", 8)), bel(queueSize(N), N < 2, supply(CS, TS), (TS - CS) >= 4, minerals(M), M >= 100) 
		then train("Protoss Zealot").
	% If nothing in believe state then:
	if a-goal(unitAmount("Protoss Dragoon", 50)), bel(queueSize(N), N < 2, supply(CS, TS), (TS - CS) >= 4, minerals(M), M >= 125, gas(G), G>= 50), not(bel(unitAmount("Protoss Dragoon", _))) then train("Protoss Dragoon").
	if a-goal(unitAmount("Protoss Zealot", 50)), not(bel(unitAmount("Protoss Zealot",_))), bel(queueSize(N), N < 2, supply(CS, TS), (TS - CS) >= 4, minerals(M), M >= 100) then train("Protoss Zealot").
	
	% If more than one unit available
	if a-goal(unitAmount("Protoss Dragoon", 50)), bel(unitAmount("Protoss Dragoon", X), unitAmount("Protoss Zealot", Y), X<Y, queueSize(N), N < 2, supply(CS, TS), (TS - CS) >= 4, minerals(M), M >= 125, gas(G), G>= 50) then train("Protoss Dragoon").
	if a-goal(unitAmount("Protoss Zealot", 50)), bel(unitAmount("Protoss Dragoon", X), unitAmount("Protoss Zealot", Y), X<Y, queueSize(N), N < 2, supply(CS, TS), (TS - CS) >= 4, minerals(M), M >= 100) then train("Protoss Zealot").

	
}